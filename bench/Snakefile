MOPRS = "../target/release/moprs"
BAMSIM = "../target/release/bamsim"
NUM_BAMS = 5
NUM_CHROMS = 3
CHROM_LEN = 10_000_000
MIN_DEPTH = 10
MAX_DEPTH = 50
MIN_DEPTH_MEAN = 5
MIN_PROPORTION = 0.5
MOPRS_THREADS = 4


localrules: build

rule all:
    input:
        "results/simulated_bams/bamlist.txt"
        # "results/moprs.bed",
        # "results/mop.bed"

rule build:
    output: MOPRS, BAMSIM
    shell:
        """
        cargo build --release --workspace
        """

rule make_bams:
    output:
        bamsim_binary = BAMSIM
        bams = expand("results/simulated_bams/{i}.bam", i=range(0, NUM_BAMS)),
        bam_indexes = expand("results/simulated_bams/{i}.bam.bai", i=range(0, NUM_BAMS)),
        truth = "results/simulated_bams/truth.bed",
        bamlist = "results/simulated_bams/bamlist.txt"
    params:
        num_bams = f"--num-bams {NUM_BAMS}",
        num_chrs = f"--num-chrs {NUM_CHROMS}",
        chr_length = f"--chr-length {CHROM_LEN}",
        min_depth = f"--min-depth {MIN_DEPTH}",
        max_depth = f"--max-depth {MAX_DEPTH}",
        min_mean_depth = f"--min-mean-depth {MIN_DEPTH_MEAN}",
        proportion = f"--proportion {MIN_PROPORTION}",
        outdir = f"--outdir results/simulated_bams/"
    threads = 8 # hardcoded in bamsim
    shell:
        """
        {input.bamsim_binary} {params}
        """

rule mosdepth:
    input:
        bam = "results/simulated_bams/{i}.bam",
        index = "results/simulated_bams/{i}.bam.bai"
    output:
        "results/{i}.per-base.d4"
    params:
        prefix=lambda wc, output: output[0].replace(".per-base.d4", ""),
    shadow: "minimal"
    benchmark: 
        "results/benchmarks/mosdepth/{i}.txt" 
    shell:
        """
        mosdepth --d4 {params.prefix} {input.bam}
        """
    
rule merge_d4:
    input:
        expand("results/{i}.per-base.d4", i=range(0, NUM_BAMS))
    output:
        "results/merged.d4"
    benchmark: 
        "results/benchmarks/merge_d4.txt"
    shell:
        """
        d4tools merge {input} {output}
        """


rule pymop:
    input:
        bams = expand("results/simulated_bams/{i}.bam", i=range(0, NUM_BAMS)),
        bamlist = "results/simulated_bams/bamlist.txt"
    output:
        "results/mop.bed"
    params:
        min_depth = f"-i {MIN_DEPTH}",
        max_depth = f"-x {MAX_DEPTH}",
        min_mean_depth = f"-M {MIN_DEPTH_MEAN}",
        proportion = f"-m {MIN_PROPORTION}"
    benchmark:
        "results/benchmarks/mop.txt"
    shell:
        """
        mop {params} -b {input.bamlist} > {output}
        """

rule moprs:
    input:
        moprs_binary = MOPRS,
        d4 = "results/merged.d4"
    output:
        "results/moprs.bed"
    params:
        min_depth = f"-m {MIN_DEPTH}",
        max_depth = f"-M {MAX_DEPTH}",
        min_mean_depth = f"-u {MIN_DEPTH_MEAN}",
        proportion = f"-d {MIN_PROPORTION}"
    threads: MOPRS_THREADS
    benchmark:
        "results/benchmarks/moprs.txt"
    shell:
        """
        {input.moprs_binary} {params} -t {threads} --d4 {input.d4} > {output}
        """
    